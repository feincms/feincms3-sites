# Generated by Django 4.2.5 on 2023-09-29 06:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import feincms3_sites.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.FEINCMS3_SITES_SITE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomSite",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="is default"),
                ),
                ("host", models.CharField(max_length=200, verbose_name="host")),
                (
                    "is_managed_re",
                    models.BooleanField(
                        default=True,
                        help_text="Deactivate this to specify the regex yourself.",
                        verbose_name="manage the host regex",
                    ),
                ),
                (
                    "host_re",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="host regular expression",
                    ),
                ),
                (
                    "default_language",
                    models.CharField(
                        blank=True,
                        choices=[("", "")],
                        help_text="The default language will be overridden by more specific settings such as the language of individual pages.",
                        max_length=10,
                        verbose_name="default language",
                    ),
                ),
                (
                    "language_codes",
                    models.CharField(
                        blank=True,
                        help_text="A list of comma-separated langauge codes supported by this site.",
                        max_length=200,
                        validators=[feincms3_sites.models.validate_language_codes],
                        verbose_name="language codes",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "verbose_name": "site",
                "verbose_name_plural": "sites",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "menu",
                    models.CharField(
                        blank=True,
                        choices=[("", "")],
                        default="main",
                        max_length=100,
                        verbose_name="menu",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        choices=[("", "")],
                        default="en",
                        max_length=10,
                        verbose_name="language",
                    ),
                ),
                (
                    "redirect_to_url",
                    models.CharField(
                        blank=True, max_length=1000, verbose_name="Redirect to URL"
                    ),
                ),
                (
                    "page_type",
                    models.CharField(
                        choices=[("", "")],
                        default="standard",
                        max_length=100,
                        verbose_name="page type",
                    ),
                ),
                (
                    "app_namespace",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=100,
                        verbose_name="app instance namespace",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "position",
                    models.PositiveIntegerField(
                        db_index=True,
                        editable=False,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=1,
                                message="Position is expected to be greater than zero.",
                            )
                        ],
                    ),
                ),
                (
                    "static_path",
                    models.BooleanField(
                        default=False, verbose_name="manually define the path"
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        blank=True,
                        help_text="Generated automatically if 'static path' is unset.",
                        max_length=1000,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Path must start and end with a slash (/).",
                                regex="^/(|.+/)$",
                            )
                        ],
                        verbose_name="path",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="testapp.page",
                        verbose_name="parent",
                    ),
                ),
                (
                    "redirect_to_page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="testapp.page",
                        verbose_name="Redirect to page",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.FEINCMS3_SITES_SITE_MODEL,
                        verbose_name="site",
                    ),
                ),
            ],
            options={
                "verbose_name": "page",
                "verbose_name_plural": "pages",
                "ordering": ["position"],
                "abstract": False,
                "unique_together": {("site", "path")},
            },
        ),
        migrations.CreateModel(
            name="Snippet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "template_name",
                    models.CharField(
                        choices=[("", "")], max_length=100, verbose_name="template"
                    ),
                ),
                ("region", models.CharField(max_length=255)),
                ("ordering", models.IntegerField(default=0)),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_set",
                        to="testapp.page",
                    ),
                ),
            ],
            options={
                "verbose_name": "predefined snippet",
                "verbose_name_plural": "predefined snippets",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="title")),
                (
                    "category",
                    models.CharField(
                        choices=[("publications", "publications"), ("blog", "blog")],
                        max_length=20,
                        verbose_name="category",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.FEINCMS3_SITES_SITE_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-pk"],
            },
        ),
    ]
